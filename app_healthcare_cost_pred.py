# -*- coding: utf-8 -*-
"""app_healthcare_cost_pred.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d1UxBgJ7tYKN1Wxzi8F-jGBDfv8WG9TW
"""

import streamlit as st
import joblib
import numpy as np

# Load model and preprocessing files
model = joblib.load('healthcare_cost_prediction_model.joblib')
scaler = joblib.load('scaler.joblib')
label_encoders = joblib.load('label_encoders.joblib')

# Title and inputs
st.title("Healthcare Cost Prediction App")
st.write("Enter the healthcare details below to get a cost prediction for the patient's outcome.")

# Inputs for each feature
hospital = st.selectbox("Hospital", label_encoders['Hospital'].classes_)
age = st.number_input("Age", min_value=0)
length_of_stay = st.number_input("Length of Stay", min_value=0)
blood_type = st.selectbox("Blood Type", label_encoders['Blood Type'].classes_)
medical_condition = st.selectbox("Medical Condition", label_encoders['Medical Condition'].classes_)
insurance_provider = st.selectbox("Insurance Provider", label_encoders['Insurance Provider'].classes_)
medication = st.selectbox("Medication", label_encoders['Medication'].classes_)
admission_type = st.selectbox("Admission Type", label_encoders['Admission Type'].classes_)
test_results = st.selectbox("Test Results", label_encoders['Test Results'].classes_)
gender = st.selectbox("Gender", label_encoders['Gender'].classes_)

# Prepare inputs for prediction
inputs = np.array([
    label_encoders['Hospital'].transform([hospital])[0],
    age,
    length_of_stay,
    label_encoders['Blood Type'].transform([blood_type])[0],
    label_encoders['Medical Condition'].transform([medical_condition])[0],
    label_encoders['Insurance Provider'].transform([insurance_provider])[0],
    label_encoders['Medication'].transform([medication])[0],
    label_encoders['Admission Type'].transform([admission_type])[0],
    label_encoders['Test Results'].transform([test_results])[0],
    label_encoders['Gender'].transform([gender])[0]
]).reshape(1, -1)

# Scale numerical features
inputs[:, 1:3] = scaler.transform(inputs[:, 1:3])

# Predict outcome
if st.button("Predict Outcome"):
    prediction = model.predict(inputs)
    st.write(f"Predicted Outcome: {prediction[0]:.2f}")